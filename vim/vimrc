let mapleader = "\<Space>"

set tabstop=2 shiftwidth=2 expandtab autoindent nowrap nu
set t_Co=256
set autoread
set ruler
if $TMUX==''
  set clipboard=unnamed
endif

filetype plugin indent on
filetype plugin on
colorscheme twilight256

call plug#begin()
Plug 'python-rope/ropevim'
Plug 'ervandew/supertab'

Plug 'ctrlpvim/ctrlp.vim'

let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
if has('python') ||  has('python3')
  " Faster and more accurate fuzzy-matching
  Plug 'felikz/ctrlp-py-matcher'
  let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }
endif
let g:ctrlp_funky_syntax_highlight = 1
let g:ctrlp_working_path_mode = 'r'

Plug 'davidhalter/jedi-vim'
let g:jedi#smart_auto_mappings = 0

Plug 'scrooloose/nerdtree'
nnoremap gf :NERDTreeToggle<CR>

Plug 'w0rp/ale'
nmap <silent> [s <Plug>(ale_previous_wrap)
nmap <silent> ]s <Plug>(ale_next_wrap)
let g:ale_linters = {}
let g:ale_linters.python = ['flake8', 'mypy']
let g:ale_python_flake8_executable = '/bin/sh -c "cd $(dirname %) && flake8"'
let g:ale_python_flake8_args = "--ignore=E501,I201"

Plug 'benmills/vimux'
noremap <leader>t :VimuxRunCommand("test_ " . bufname("%"))<CR>
noremap <leader>T :VimuxRunLastCommand<CR>

Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"

Plug 'terryma/vim-multiple-cursors'
let g:multi_cursor_use_default_mapping=0
let g:multi_cursor_start_key='<C-n>'
let g:multi_cursor_next_key='<C-n>'
let g:multi_cursor_prev_key='<C-p>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<Esc>'

call plug#end()

let g:python_highlight_all = 1

vmap g, :'<,'>s/\, /\,\n        /g<CR>
noremap P P`[
nmap <leader>, :e ~/.vimrc<CR>
noremap <silent> <leader>V :source ~/.vimrc<cr>
nnoremap gb :buffers<CR>:buffer<Space>
nnoremap gt :b#<CR>
nnoremap gT :b#<CR>

syntax on
